format_version: 10
pipelines:
  Test:
    group: AT20Group
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    environment_variables:
      GIT_COMMIT_HASH: 1.2
    secure_variables: 
      SONAR_TOKEN: AES:2aHvr6iTjTxDXMzr0KkRVA==:TPvsCXHWgOZQLQzOgPUzUCHBeJH2ylpd2ulPflj2X9em485+QQXeMP9Sng0YgE+w
      DOCKER_PASS: AES:TEq5p3C67WEMknds0iOAaw==:kH+9G1dDoVRq2j4fYm+dsw==
    materials:
      git-8f5d37d:
        git: https://github.com/AT20-DevOps/AT_20_GRAPHQL_SERVICE.git
        username: bdcol
        shallow_clone: false
        auto_update: true
        branch: task12_bdcc
        encrypted_password: AES:sNvzGsapD3HmbyDbsQeSnA==:+qIF5hTOaAjVstE1Bgs35A==
    stages:
    - Test:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          unit-test:
            timeout: 0
            resources: 
            - ubuntu
            tasks:
            - script: |
                npm install
                npm run test tests/
            artifacts:
            - build:
                source: tests/report.html
                destination: html_report
            - build: 
                source: Dockerfile
            - build:
                source: docker-compose.dev.bdcc.yaml
    - Code-inspection:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          Sonar:
            timeout: 0
            resources: 
            - ubuntu
            tasks:
            - script: |
                ls -la
                /godata/.sonar/sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner -Dsonar.organization=at20-bdcc -Dsonar.projectKey=at20-bdcc_at20-devops -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io
          
    - PackageAndPublish:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          Login-and-Push:
            timeout: 0
            resources: 
            - docker
            tasks:
            - script: |
                docker build -t graphql_servicego .
                docker login -u bdcc10 -p ${DOCKER_PASS}
                docker tag graphql_servicego bdcc10/bdcc-at20_graphql_service:${GIT_COMMIT_HASH}
                docker push bdcc10/bdcc-at20_graphql_service:${GIT_COMMIT_HASH}
            artifacts:
              - build:
                  source: docker-compose.yaml
           
  SmokeTest:
    group: AT20Group
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    environment_variables:
      GIT_COMMIT_HASH: 1.2
    materials:
      Test:
        pipeline: Test
        stage: PackageAndPublish
    stages:
    - Deploy-to-Dev:
        fetch_materials: false
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          Deploy-to-Dev:
            timeout: 0
            resources: 
            - docker
            tasks:
            - fetch: 
                pipeline: Test
                stage: PackageAndPublish
                job: docker
                source: docker-compose.dev.bdcc.yaml
                is_file: false
                run_if: passed
            - script: |
                echo deploy here
                ls -la
           
        
 