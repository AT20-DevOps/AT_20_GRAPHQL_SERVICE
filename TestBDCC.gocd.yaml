format_version: 10
pipelines:
  Task11:
    group: AT20Group
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    environment_variables:
      GIT_COMMIT_HASH: 1.2
    secure_variables: 
      SONAR_TOKEN: AES:XVEJ7dezT7ZVOh4eCQavsw==:yd4P/XY9qPgOPn+Sdhy1qQ==
      
    materials:
      git-8f5d37d:
        git: https://github.com/AT20-DevOps/AT_20_GRAPHQL_SERVICE.git
        username: bdcol
        shallow_clone: false
        auto_update: true
        branch: task11_bdcc
        encrypted_password: AES:sNvzGsapD3HmbyDbsQeSnA==:+qIF5hTOaAjVstE1Bgs35A==
    stages:
    - Test:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          unit-test:
            timeout: 0
            resources: 
            - ubuntu
            tasks:
            - script: |
                npm install
                npm run test tests/
            artifacts:
            - build:
                source: tests/report.html
                destination: html_report
    - Code-inspection:
        fetch_materials: false
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          Sonar:
            timeout: 0
            resources: 
            - ubuntu
            tasks:
            - fetch:
                is_file: false
                source: tests/report.html 
                stage: Test
                job: unit-test
                run_if: passed
            - script: |
                ls -la
                echo sonar-scanner -Dsonar.organization=at20-bdcc -Dsonar.projectKey=at20-bdcc_at20-devops -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io'

    - Quality-gate:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          wait-For-Quality-Gate:
            timeout: 0
            tasks:
            - exec:
                arguments:
                - This is the quality gate stage
                command: echo
                run_if: passed
    - Package:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          Build-the-service:
            timeout: 0
            resources: 
            - docker
            tasks:
            - script: |
                echo docker build -t graphql_serviceGO .
    - Publish:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          Login-to-docker:
            timeout: 0
            resources: 
            - docker
            tasks:
            - script: |
                echo docker login -u bdcc10 -p ${DOCKER_PASS}
          Create-the-tag-for-the-service:
            timeout: 0
            resources: 
            - docker
            tasks:
            - script: |
                echo docker tag graphql_serviceGO bdcc10/bdcc-at20_graphql_service:GO
          Push-the-service:
            timeout: 0
            resources: 
            - docker
            tasks:
            - script: |
                echo docker push bdcc10/bdcc-at20_graphql_service:GO
    - Deploy-to-Dev:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          Deploy:
            timeout: 0
            tasks:
            - exec:
                arguments:
                - This is a command to deploy the service to the Dev area
                command: echo
                run_if: passed
    - Deploy-to-Auto:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          Deploy-Auto:
            timeout: 0
            tasks:
            - exec:
                arguments:
                - This is a command for automatic deployment
                command: echo
                run_if: passed
