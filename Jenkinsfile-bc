pipeline {
    agent any
    environment {
        DOCKER_PASS = credentials('docker_pass')
        SONAR_TOKEN = credentials('sonar_token')
    }
    stages {
        stage('Test') {
            agent {
                docker {
                    image 'node:18-alpine3.16'
                }
            }
            steps {
                sh 'npm install'
                sh 'npm run test tests/'
                    }
            post {
                always {
                    archiveArtifacts artifacts: 'tests/report.html, tests/jest-html-reporters-attach/', followSymlinks: false
                        }
                    }
                }
        stage('Code inspection') {
            steps {
                sh '/var/jenkins_home/.sonar/sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner \
                    -Dsonar.organization=at20-bdcc \
                    -Dsonar.projectKey=at20-bdcc_at20-devops \
                    -Dsonar.sources=. \
                    -Dsonar.host.url=https://sonarcloud.io'
            }
        }
        // stage('Quality gate') {

        // }
        stage('Package'){
            steps{
                sh 'docker build -t graphql_service .'
                }
            }
        stage('Publish'){
            steps{
                sh 'docker login -u bdcc10 -p ${DOCKER_PASS}'
                sh 'docker tag graphql_service bdcc10/bdcc-at20_graphql_service'
                sh 'docker push bdcc10/bdcc-at20_graphql_service'

                }
            }
        }
    }
